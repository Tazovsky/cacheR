% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{cachemer}
\alias{cachemer}
\title{cachemer}
\format{\code{\link{R6Class}} object.}
\value{
Object of \code{\link{R6Class}} with methods for caching objects
}
\description{
TODO
}
\examples{
\dontrun{
 TODO: add examples
}

}
\keyword{data}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{new(path, overwrite=TRUE)}}{Initializes \code{\link{R6Class}} object}

\item{\code{summary}}{Prints summary of \code{\link{R6Class}} object}

\item{\code{share(nm, val)}}{Shares object between multiple `cachemer` objects}

\item{\code{getShared(nm)}}{Gets shared object}

\item{\code{cacheme(fun.name, fun.body, arguments, output=NULL, algo="md5")}}{Caches object/function}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{new(path, overwrite=TRUE)}}{Initializes \code{\link{R6Class}} object}

\item{\code{summary}}{Prints summary of \code{\link{R6Class}} object}

\item{\code{getEnv}}{Gets environment shared between multiple `cachemer` objects}

\item{\code{share(nm, val)}}{Shares object between multiple `cachemer` objects}

\item{\code{getShared(nm)}}{Gets shared object}

\item{\code{cacheme(fun.name, fun.body, arguments, output=NULL, algo="md5")}}{Caches object/function}

\item{\code{lastCache}}{Gets last object added to cache}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{cachemer$new()}}
\item \href{#method-summary}{\code{cachemer$summary()}}
\item \href{#method-clear}{\code{cachemer$clear()}}
\item \href{#method-cacheme}{\code{cachemer$cacheme()}}
\item \href{#method-clone}{\code{cachemer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cachemer$new(path, overwrite = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cachemer$summary(output.class = "tbl")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear"></a>}}
\subsection{Method \code{clear()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cachemer$clear(all = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cacheme"></a>}}
\subsection{Method \code{cacheme()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cachemer$cacheme(
  fun.name,
  fun.body,
  arguments,
  output = NULL,
  envir = parent.frame(1),
  algo = "md5"
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{cachemer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
